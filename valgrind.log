==9645== Memcheck, a memory error detector
==9645== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==9645== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==9645== Command: ./scan exampleImages/RV2Small.bmp outputImages/outputRV2Small.bmp 3
==9645== Parent PID: 9644
==9645== 
--9645-- 
--9645-- Valgrind options:
--9645--    --tool=memcheck
--9645--    --verbose
--9645--    --leak-check=full
--9645--    --log-file=valgrind.log
--9645-- Contents of /proc/version:
--9645--   Linux version 2.6.32-754.11.1.el6.x86_64 (mockbuild@x86-031.build.eng.bos.redhat.com) (gcc version 4.4.7 20120313 (Red Hat 4.4.7-23) (GCC) ) #1 SMP Tue Jan 22 17:25:23 EST 2019
--9645-- Arch and hwcaps: AMD64, amd64-sse3-cx16
--9645-- Page sizes: currently 4096, max supported 4096
--9645-- Valgrind library directory: /usr/lib64/valgrind
--9645-- Reading syms from /home/shay/a/ksivaman/ECE264/imgthreads/efficientCamScan/scan
--9645-- Reading syms from /usr/lib64/valgrind/memcheck-amd64-linux
--9645--    object doesn't have a dynamic symbol table
--9645-- Reading syms from /lib64/ld-2.12.so
--9645--   Considering /usr/lib/debug/.build-id/97/af4b77212f74cff72b6c013e6aa2d74a97ef60.debug ..
--9645--   .. build-id is valid
--9645-- Scheduler: using generic scheduler lock implementation.
--9645-- Reading suppressions file: /usr/lib64/valgrind/default.supp
==9645== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-9645-by-ksivaman-on-ecegrid-thin1.ecn.purdue.edu
==9645== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-9645-by-ksivaman-on-ecegrid-thin1.ecn.purdue.edu
==9645== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-9645-by-ksivaman-on-ecegrid-thin1.ecn.purdue.edu
==9645== 
==9645== TO CONTROL THIS PROCESS USING vgdb (which you probably
==9645== don't want to do, unless you know exactly what you're doing,
==9645== or are doing some strange experiment):
==9645==   /usr/lib64/valgrind/../../bin/vgdb --pid=9645 ...command...
==9645== 
==9645== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==9645==   /path/to/gdb ./scan
==9645== and then give GDB the following command
==9645==   target remote | /usr/lib64/valgrind/../../bin/vgdb --pid=9645
==9645== --pid is optional if only one valgrind process is running
==9645== 
--9645-- REDIR: 0x3d29e17f90 (strlen) redirected to 0x38049551 (vgPlain_amd64_linux_REDIR_FOR_strlen)
--9645-- Reading syms from /usr/lib64/valgrind/vgpreload_core-amd64-linux.so
--9645-- Reading syms from /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so
--9645-- REDIR: 0x3d29e17da0 (index) redirected to 0x4a07c30 (index)
--9645-- REDIR: 0x3d29e17e20 (strcmp) redirected to 0x4a08570 (strcmp)
--9645-- Reading syms from /lib64/libpthread-2.12.so
--9645--   Considering /usr/lib/debug/.build-id/4e/a475cd3fd3b69b6c95d9381fa74b36db4992ef.debug ..
--9645--   .. build-id is valid
--9645-- Reading syms from /lib64/libc-2.12.so
--9645--   Considering /usr/lib/debug/.build-id/a5/f93642576869a169bacf9771c674e0cb91fcbb.debug ..
--9645--   .. build-id is valid
--9645-- REDIR: 0x3d2a284d80 (strcasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--9645-- REDIR: 0x3d2a287040 (strncasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--9645-- REDIR: 0x3d2a281210 (__GI_strlen) redirected to 0x4a07fb0 (__GI_strlen)
--9645-- REDIR: 0x3d2a282cf0 (__GI_strrchr) redirected to 0x4a07ab0 (__GI_strrchr)
--9645-- REDIR: 0x3d2a27aac0 (malloc) redirected to 0x4a069ac (malloc)
--9645-- REDIR: 0x3d2a289720 (memcpy) redirected to 0x4a08b60 (memcpy)
--9645-- REDIR: 0x3d2a27b920 (free) redirected to 0x4a063a9 (free)
==9645== Invalid read of size 4
==9645==    at 0x401618: updateKernelRow (histogram.c:76)
==9645==    by 0x40121E: AdaptiveThresholding (bmpfunc.c:87)
==9645==    by 0x400886: main (main.c:31)
==9645==  Address 0x4e5ee40 is 0 bytes after a block of size 1,600 alloc'd
==9645==    at 0x4A06A2E: malloc (vg_replace_malloc.c:270)
==9645==    by 0x40145A: allocate_mem (histogram.c:27)
==9645==    by 0x40113E: AdaptiveThresholding (bmpfunc.c:75)
==9645==    by 0x400886: main (main.c:31)
==9645== 
--9645-- REDIR: 0x3d2a2845b0 (mempcpy) redirected to 0x4a0a020 (mempcpy)
==9645== 
==9645== HEAP SUMMARY:
==9645==     in use at exit: 0 bytes in 0 blocks
==9645==   total heap usage: 266 allocs, 266 frees, 2,631,594 bytes allocated
==9645== 
==9645== All heap blocks were freed -- no leaks are possible
==9645== 
==9645== ERROR SUMMARY: 156160 errors from 1 contexts (suppressed: 8 from 6)
==9645== 
==9645== 156160 errors in context 1 of 1:
==9645== Invalid read of size 4
==9645==    at 0x401618: updateKernelRow (histogram.c:76)
==9645==    by 0x40121E: AdaptiveThresholding (bmpfunc.c:87)
==9645==    by 0x400886: main (main.c:31)
==9645==  Address 0x4e5ee40 is 0 bytes after a block of size 1,600 alloc'd
==9645==    at 0x4A06A2E: malloc (vg_replace_malloc.c:270)
==9645==    by 0x40145A: allocate_mem (histogram.c:27)
==9645==    by 0x40113E: AdaptiveThresholding (bmpfunc.c:75)
==9645==    by 0x400886: main (main.c:31)
==9645== 
--9645-- 
--9645-- used_suppression:      4 U1004-ARM-_dl_relocate_object
--9645-- used_suppression:      4 glibc-2.5.x-on-SUSE-10.2-(PPC)-2a
==9645== 
==9645== ERROR SUMMARY: 156160 errors from 1 contexts (suppressed: 8 from 6)
